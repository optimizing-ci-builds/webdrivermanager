name: build
on: [push]
env:
  DISPLAY: :99
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
jobs:
  build_os_ubuntu-latest_java_11:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        java:
        - 11
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/webdrivermanager/webdrivermanager/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_buildosubuntulatestjava11_CheckoutGitHubrepo_22
    - run: rm starting_buildosubuntulatestjava11_CheckoutGitHubrepo_22
    - name: Checkout GitHub repo
      uses: actions/checkout@v2
    - run: touch starting_buildosubuntulatestjava11_SetupJava_24
    - run: rm starting_buildosubuntulatestjava11_SetupJava_24
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - run: touch starting_buildosubuntulatestjava11_StartXvfb_29
    - run: rm starting_buildosubuntulatestjava11_StartXvfb_29
    - name: Start Xvfb
      run: Xvfb $DISPLAY &
    - run: touch starting_buildosubuntulatestjava11_RuntestsonLinux_32
    - run: rm starting_buildosubuntulatestjava11_RuntestsonLinux_32
    - name: Run tests on Linux
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Record*
    - run: touch starting_buildosubuntulatestjava11_RuntestsonMac_39
    - run: rm starting_buildosubuntulatestjava11_RuntestsonMac_39
    - name: Run tests on Mac
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Docker*,!Record*
    - run: touch starting_buildosubuntulatestjava11_RuntestsonWindows_46
    - run: rm starting_buildosubuntulatestjava11_RuntestsonWindows_46
    - name: Run tests on Windows
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Docker*
    - run: touch starting_buildosubuntulatestjava11_UploadanalysistoSonarCloud_53
    - run: rm starting_buildosubuntulatestjava11_UploadanalysistoSonarCloud_53
    - name: Upload analysis to SonarCloud
        'pull')
      run: 'mvn -B sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=bonigarcia-github
        -Dsonar.projectKey=io.github.bonigarcia:webdrivermanager

        '
    - run: touch starting_buildosubuntulatestjava11_UploadcoveragetoCodecov_60
    - run: rm starting_buildosubuntulatestjava11_UploadcoveragetoCodecov_60
    - name: Upload coverage to Codecov
        'pull')
      uses: codecov/codecov-action@v1
    - run: touch starting_buildosubuntulatestjava11_StorerecordingsonlyavailableinWindows_64
    - run: rm starting_buildosubuntulatestjava11_StorerecordingsonlyavailableinWindows_64
    - name: Store recordings (only available in Windows)
      uses: actions/upload-artifact@v3
      with:
        name: webm-files
        path: C:\Users\runneradmin\Downloads\*.webm
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'UT-SE-Research'
        destination-repository-name: 'ci-analyzes'
        target-branch: '1675896667'
        target-directory: 'webdrivermanager/.github/workflows/build/buildosubuntulatestjava11'
  build_os_windows-latest_java_11:
    strategy:
      matrix:
        os:
        - windows-latest
        java:
        - 11
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/webdrivermanager/webdrivermanager/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_buildoswindowslatestjava11_CheckoutGitHubrepo_79
    - run: rm starting_buildoswindowslatestjava11_CheckoutGitHubrepo_79
    - name: Checkout GitHub repo
      uses: actions/checkout@v2
    - run: touch starting_buildoswindowslatestjava11_SetupJava_81
    - run: rm starting_buildoswindowslatestjava11_SetupJava_81
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - run: touch starting_buildoswindowslatestjava11_StartXvfb_86
    - run: rm starting_buildoswindowslatestjava11_StartXvfb_86
    - name: Start Xvfb
      run: Xvfb $DISPLAY &
    - run: touch starting_buildoswindowslatestjava11_RuntestsonLinux_89
    - run: rm starting_buildoswindowslatestjava11_RuntestsonLinux_89
    - name: Run tests on Linux
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Record*
    - run: touch starting_buildoswindowslatestjava11_RuntestsonMac_96
    - run: rm starting_buildoswindowslatestjava11_RuntestsonMac_96
    - name: Run tests on Mac
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Docker*,!Record*
    - run: touch starting_buildoswindowslatestjava11_RuntestsonWindows_103
    - run: rm starting_buildoswindowslatestjava11_RuntestsonWindows_103
    - name: Run tests on Windows
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Docker*
    - run: touch starting_buildoswindowslatestjava11_UploadanalysistoSonarCloud_110
    - run: rm starting_buildoswindowslatestjava11_UploadanalysistoSonarCloud_110
    - name: Upload analysis to SonarCloud
        'pull')
      run: 'mvn -B sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=bonigarcia-github
        -Dsonar.projectKey=io.github.bonigarcia:webdrivermanager

        '
    - run: touch starting_buildoswindowslatestjava11_UploadcoveragetoCodecov_117
    - run: rm starting_buildoswindowslatestjava11_UploadcoveragetoCodecov_117
    - name: Upload coverage to Codecov
        'pull')
      uses: codecov/codecov-action@v1
    - run: touch starting_buildoswindowslatestjava11_StorerecordingsonlyavailableinWindows_121
    - run: rm starting_buildoswindowslatestjava11_StorerecordingsonlyavailableinWindows_121
    - name: Store recordings (only available in Windows)
      uses: actions/upload-artifact@v3
      with:
        name: webm-files
        path: C:\Users\runneradmin\Downloads\*.webm
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'UT-SE-Research'
        destination-repository-name: 'ci-analyzes'
        target-branch: '1675896667'
        target-directory: 'webdrivermanager/.github/workflows/build/buildoswindowslatestjava11'
  build_os_macos-latest_java_11:
    strategy:
      matrix:
        os:
        - macos-latest
        java:
        - 11
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/webdrivermanager/webdrivermanager/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_buildosmacoslatestjava11_CheckoutGitHubrepo_136
    - run: rm starting_buildosmacoslatestjava11_CheckoutGitHubrepo_136
    - name: Checkout GitHub repo
      uses: actions/checkout@v2
    - run: touch starting_buildosmacoslatestjava11_SetupJava_138
    - run: rm starting_buildosmacoslatestjava11_SetupJava_138
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: ${{ matrix.java }}
    - run: touch starting_buildosmacoslatestjava11_StartXvfb_143
    - run: rm starting_buildosmacoslatestjava11_StartXvfb_143
    - name: Start Xvfb
      run: Xvfb $DISPLAY &
    - run: touch starting_buildosmacoslatestjava11_RuntestsonLinux_146
    - run: rm starting_buildosmacoslatestjava11_RuntestsonLinux_146
    - name: Run tests on Linux
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Record*
    - run: touch starting_buildosmacoslatestjava11_RuntestsonMac_153
    - run: rm starting_buildosmacoslatestjava11_RuntestsonMac_153
    - name: Run tests on Mac
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Docker*,!Record*
    - run: touch starting_buildosmacoslatestjava11_RuntestsonWindows_160
    - run: rm starting_buildosmacoslatestjava11_RuntestsonWindows_160
    - name: Run tests on Windows
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Docker*
    - run: touch starting_buildosmacoslatestjava11_UploadanalysistoSonarCloud_167
    - run: rm starting_buildosmacoslatestjava11_UploadanalysistoSonarCloud_167
    - name: Upload analysis to SonarCloud
        'pull')
      run: 'mvn -B sonar:sonar -Dsonar.host.url=https://sonarcloud.io -Dsonar.organization=bonigarcia-github
        -Dsonar.projectKey=io.github.bonigarcia:webdrivermanager

        '
    - run: touch starting_buildosmacoslatestjava11_UploadcoveragetoCodecov_174
    - run: rm starting_buildosmacoslatestjava11_UploadcoveragetoCodecov_174
    - name: Upload coverage to Codecov
        'pull')
      uses: codecov/codecov-action@v1
    - run: touch starting_buildosmacoslatestjava11_StorerecordingsonlyavailableinWindows_178
    - run: rm starting_buildosmacoslatestjava11_StorerecordingsonlyavailableinWindows_178
    - name: Store recordings (only available in Windows)
      uses: actions/upload-artifact@v3
      with:
        name: webm-files
        path: C:\Users\runneradmin\Downloads\*.webm
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'UT-SE-Research'
        destination-repository-name: 'ci-analyzes'
        target-branch: '1675896667'
        target-directory: 'webdrivermanager/.github/workflows/build/buildosmacoslatestjava11'

