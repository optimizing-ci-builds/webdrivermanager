name: build

on: [push]

env:
  DISPLAY: :99
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        java: [ 11 ]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
        pip install numpy
    - run: sudo apt update
    - run: sudo apt install inotify-tools
    - run: inotifywait -mr /home/runner/work/webdrivermanager/webdrivermanager/ --format '%T;%w;%f;%e' --timefmt %T -o /home/runner/inotify-logs.csv & echo 'basak'
    - run: touch starting_build_CheckoutGitHubrepo_21
    - run: rm starting_build_CheckoutGitHubrepo_21
    - name: Checkout GitHub repo
      uses: actions/checkout@v2
    - run: touch starting_build_SetupJava_23
    - run: rm starting_build_SetupJava_23
    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.java }}
    - run: touch starting_build_StartXvfb_28
    - run: rm starting_build_StartXvfb_28
    - name: Start Xvfb
      run: Xvfb $DISPLAY &
    - run: touch starting_build_RuntestsonLinux_31
    - run: rm starting_build_RuntestsonLinux_31
    - name: Run tests on Linux
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Record*
    - run: touch starting_build_RuntestsonMac_38
    - run: rm starting_build_RuntestsonMac_38
    - name: Run tests on Mac
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Docker*,!Record*
    - run: touch starting_build_RuntestsonWindows_45
    - run: rm starting_build_RuntestsonWindows_45
    - name: Run tests on Windows
      uses: nick-invision/retry@v2.7.1
      with:
        timeout_minutes: 30
        max_attempts: 3
        command: mvn -B test -Dtest=!Docker*
    - run: touch starting_build_UploadanalysistoSonarCloud_52
    - run: rm starting_build_UploadanalysistoSonarCloud_52
    - name: Upload analysis to SonarCloud
      run: >
        mvn -B sonar:sonar
        -Dsonar.host.url=https://sonarcloud.io
        -Dsonar.organization=bonigarcia-github
        -Dsonar.projectKey=io.github.bonigarcia:webdrivermanager
    - run: touch starting_build_UploadcoveragetoCodecov_59
    - run: rm starting_build_UploadcoveragetoCodecov_59
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v1
    - run: touch starting_build_StorerecordingsonlyavailableinWindows_62
    - run: rm starting_build_StorerecordingsonlyavailableinWindows_62
    - name: Store recordings (only available in Windows)
      uses: actions/upload-artifact@v3
      with:
        name: webm-files
        path: |
          C:\Users\runneradmin\Downloads\*.webm
    - run: touch starting_finished_finished_8979874
      if: always()
    - run: rm starting_finished_finished_8979874
      if: always()
    - name: Execute py script # run file
      if: always()
      run: |
        python .github/workflows/script.py
    - run: cp /home/runner/inotify-logs.csv /home/runner/work/webdrivermanager/webdrivermanager/optimizing-ci-builds-ci-analysis/
      if: always()
    - name: Pushes analysis to another repository
      if: always()
      id: push_directory
      uses: cpina/github-action-push-to-another-repository@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
      with:
        source-directory: 'optimizing-ci-builds-ci-analysis'
        destination-github-username: 'optimizing-ci-builds'
        destination-repository-name: 'ci-analyzes'
        target-branch: 'webdrivermanager.1670419166'
        target-directory: 'webdrivermanager/1670419166/.github/workflows/build/build'
